unit Composite.Model.Venda;

interface

uses
  Composite.Model.Interfaces, System.Generics.Collections;

type
   TModelVenda = class(TInterfacedObject, iVenda)
      private
       FItens : TList<iItens>;
      public
         constructor Create ;
         destructor Destroy ; override;
         class function New: iVenda;
         function Add(value : iItens) : iVenda;
         function Total : Currency;
         function Item : iItens;

end;

implementation

uses
  System.SysUtils;

{ TModelVenda }

function TModelVenda.Add(value: iItens): iVenda;
begin

end;

constructor TModelVenda.Create;
begin
  FItens := TList<iItens>.Create;
end;

destructor TModelVenda.Destroy;
begin
  FreeAndNil(FItens);
  inherited;
end;

function TModelVenda.Item: iItens;
begin

end;

class function TModelVenda.New: iVenda;
begin
  Result := Self.Create;
end;

function TModelVenda.Total: Currency;
begin

end;

end.
