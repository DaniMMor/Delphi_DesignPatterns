unit Interpreter.Model.Expression.Item;

interface

type
   TModelExpressionItem = class(TInterfacedObject, iExpression)
      private
      public
         constructor Create ;
         destructor Destroy ; override;
         class function New: iExpression;
         function Interpreter(value : iContext) : iExpression;

end;

implementation

{ TModelExpressionItem }

constructor TModelExpressionItem.Create;
begin

end;

destructor TModelExpressionItem.Destroy;
begin

  inherited;
end;

class function TModelExpressionItem.New: iExpression;
begin
  Result := Self.Create;
end;

end.
