unit Interpreter.Model.Expression.Item;

interface

uses
  Interpreter.Model.Interfaces, System.Classes, System.SysUtils;

type
   TModelExpressionItem = class(TInterfacedObject, iExpression)
      private
        FLista : TStringlist;
      public
         constructor Create ;
         destructor Destroy ; override;
         class function New: iExpression;
         function Interpreter(value : iContext) : iExpression;

end;

implementation

{ TModelExpressionItem }

constructor TModelExpressionItem.Create;
begin
    FLista := TStringlist.Create;
end;

destructor TModelExpressionItem.Destroy;
begin
  FreeAndNil(FLista);
  inherited;
end;

function TModelExpressionItem.Interpreter(value: iContext): iExpression;
begin
   ExtractStrings([' '],[],PWideChar(value.Entrada), FLista);

   if Pos('VENDER', UPPERCASE(value.Entrada)) > 0 then
      value.Saida := 'VENDIDO O ITEM';

   if Pos('CANCELAR', UpperCase(value.Entrada)) > 0 then
      value.Saida := 'CANCELADO O ITEM';

   if Pos('',UpperCase(value.Entrada)) > 0 then
      value.Saida := 'DEVOLVIDO O ITEM';


end;

class function TModelExpressionItem.New: iExpression;
begin
  Result := Self.Create;
end;

end.
