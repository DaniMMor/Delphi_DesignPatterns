unit ProtoType.Model.Itens;

interface

uses
  ProtoType.Model.Interfaces;

type
   TItens = class(TInterfacedObject, iItens, iPrototype<iItens>)
      private
    FDescricao: string;
    FCodigo: Integer;
    FPrecoUnitario : Currency;
    procedure SetCodigo(const Value: Integer);
    procedure SetDescricao(const Value: string);
    function GetCodigo : Integer;
    function GetDescricao : String;

      public
         constructor Create ;
         destructor Destroy ; override;
         class function New: iItens;
         property Codigo : Integer read GetCodigo write SetCodigo;
         property Descricao : string read GetDescricao write SetDescricao;
         property PrecoUnitario : Currency read GetPrecoUnitario write SetPrecounitario;
         function Prototype : iPrototype<iItens>;
         function Clone : iItens;

end;

implementation

{ TItens }

function TItens.Clone: iItens;
begin
  Result := TItens.New;
  Result.Codigo := FCodigo;
  Result.Descricao := FDescricao;
end;

constructor TItens.Create;
begin

end;

destructor TItens.Destroy;
begin

  inherited;
end;

function TItens.GetCodigo: Integer;
begin
   Result := FCodigo;
end;

function TItens.GetDescricao: String;
begin
    Result := FDescricao;
end;

class function TItens.New: iItens;
begin
  Result := Self.Create;
end;

function TItens.Prototype: iPrototype<iItens>;
begin
  Result := Self;
end;

procedure TItens.SetCodigo(const Value: Integer);
begin
  FCodigo := Value;
end;

procedure TItens.SetDescricao(const Value: string);
begin
  FDescricao := Value;
end;

end.
