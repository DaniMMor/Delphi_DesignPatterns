unit Iterator.Model.Itens;

interface

uses
  Iterator.Model.Interfaces, System.Generics.Collections;

type
   TModelItensIterator = class(TInterfacedObject, iIteratorItens)
      private
        FLista : TList<iItens>;
      public
         constructor Create ;
         destructor Destroy ; override;
         class function New: iIteratorItens;
         function hasNext : Boolean;
         function Next : iItens;
         function AddList(value : TLista<iItens>) : IIteratorItens;

end;

implementation

{ TModelItensIterator }

function TModelItensIterator.AddList(value: TList<iItens>): IIteratorItens;
begin
   Result := self;
   Fl
end;

constructor TModelItensIterator.Create;
begin

end;

destructor TModelItensIterator.Destroy;
begin

  inherited;
end;

function TModelItensIterator.hasNext: Boolean;
begin

end;

class function TModelItensIterator.New: iIteratorItens;
begin
  Result := Self.Create;
end;

function TModelItensIterator.Next: iItens;
begin

end;

end.
